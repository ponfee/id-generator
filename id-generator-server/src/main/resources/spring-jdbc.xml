<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="sequenceDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="3" />
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="100" />
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="3" />
        <!-- 连接池中连接用完时,新的请求等待时间,毫秒 -->
        <property name="maxWait" value="2000" />
        <!-- #给出一条简单的sql语句进行验证 -->
        <property name="validationQuery" value="select 1" />
        <!-- #在取出连接时进行有效验证 -->
        <property name="testOnBorrow" value="true" />
        <!-- #连接池收回空闲的活动连接时是否打印消息-->
        <property name="removeAbandonedTimeout" value="120" />
        <property name="removeAbandoned" value="true" />
        <property name="logAbandoned" value="true" />
        <!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
        <property name="timeBetweenEvictionRunsMillis" value="58000" />
        <!-- #连接的超时时间，默认为半小时。 -->
        <property name="minEvictableIdleTimeMillis" value="60000" />
        <!-- druid 连接池的专有属性 -->
        <property name="filters" value="config" />
        <property name="url" value="${mysql.sequence.write.url}"/>
        <property name="username" value="${mysql.sequence.write.username}"/>
        <property name="password" value="${mysql.sequence.write.password}" />
    </bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" 
        p:dataSource-ref="sequenceDataSource" p:configLocation="classpath:/mybatis-conf.xml"
        p:mapperLocations="classpath*:code/ponfee/sequence/dao/xml/*.xml" p:typeAliasesPackage="code.ponfee.sequence.model" />

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="code.ponfee.sequence.dao.mapper" p:sqlSessionFactoryBeanName="sqlSessionFactory" />

</beans>
